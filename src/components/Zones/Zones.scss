// src/components/Zones/Zones.scss
@use "sass:color";
@use "../../styles/variables";

.zones {
  width: 40vh;
  min-width: 304px;
  max-width: 40%;
  padding: 16px;
  display: grid;
  gap: 8px;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(5, 1fr) repeat(2, 1.5fr);
  background-color: variables.$light-gray;
  position: relative;
  border: 1px dashed green;

  .pad {
    position: relative;

    &.disabled label {
      color: variables.$text-color;
      background-color: variables.$light-gray;
      border: dashed;
      border-color: color.adjust(
        variables.$input-border-color,
        $lightness: 10%
      );
      cursor: not-allowed;
      box-shadow: none;
    }

    input:disabled + label {
      background-color: color.adjust(
        variables.$input-border-color,
        $lightness: 15%
      );
      color: color.adjust(variables.$input-border-color, $lightness: 0%);
      cursor: not-allowed;
      box-shadow: none;
    }

    input {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      overflow: visible;
      width: 1px;
      height: 1px;
      padding: 0;
      border: 0;
      margin: -1px;
    }

    label {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 48px;
      padding: 0 16px;
      border-radius: variables.$border-radius;
      background: color.adjust(variables.$light-gray, $lightness: 5%);
      box-shadow: 0 2px 0 0 variables.$border-color;
      font-size: 12px;
      font-weight: 600;
      color: variables.$secondary-color;
      cursor: pointer;
      transition: background-color variables.$transition-duration,
        color variables.$transition-duration;
      line-height: 16px;
      text-align: center;
      user-select: none;
      border: none;

      &:hover {
        color: #fff;
        background-color: color.adjust(
          variables.$button-hover-color,
          $lightness: 25%
        );
      }

      &:active {
        color: color.adjust(variables.$secondary-color, $lightness: 25%);
        background-color: color.adjust(
          variables.$button-hover-color,
          $lightness: -5%
        );
      }
    }

    input:checked + label {
      color: #fff;
      background-color: variables.$text-color;
    }
  }

  /* Grid areas */
  .cervical1 {
    grid-area: cervical1;
  }

  .direction1 {
    grid-area: direction1;
  }

  .direction2 {
    grid-area: direction2;
  }

  .direction3 {
    grid-area: direction3;
  }

  .direction4 {
    grid-area: direction4;
  }

  .direction5 {
    grid-area: direction5;
  }

  .cervical2 {
    grid-area: cervical2;
  }

  .cusp1 {
    grid-area: cusp1;
  }

  .cusp2 {
    grid-area: cusp2;
  }

  .cusp3 {
    grid-area: cusp3;
  }

  .cusp4 {
    grid-area: cusp4;
  }

  /* Define the grid areas */
  grid-template-areas:
    "cervical1 cervical1 cervical1 cervical1 cervical1 cervical1"
    ". . direction1 direction1 . ."
    "direction2 direction2 direction3 direction3 direction4 direction4"
    ". . direction5 direction5 . ."
    "cervical2 cervical2 cervical2 cervical2 cervical2 cervical2"
    "cusp1 cusp1 cusp1 cusp2 cusp2 cusp2"
    "cusp3 cusp3 cusp3 cusp4 cusp4 cusp4";
}
